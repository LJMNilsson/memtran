fn arne(construand f ' int, mu g ' arr int) ' int :
    fn bertrand() :
        arne("Hello")
    ;

    goose ' bool = true

    // fn f() ' bool :
    // ;

    switch g case 3 :
        fn lenny() ' int :
        ;
    ; default :
        mu i ' int = 19
    ;
;


fn swap(ref a ' int, ref b ' int) :
;

type dict = dict{entries ' arr arr u8}


internal inline fn g(a ' int, b ' int) :
    swap(ref a, ref b)
;


mu k ' arr int = [1, 2, 3]


for i ' int = 13 downto 5,
    it over k 
:
    add_last()
;


type bertrand = nil


fn(t, u, v) memtest() :
    j ' nil = 3
    return
;


fn arne() ' int :
    k = g(1, 2, 3)
;












